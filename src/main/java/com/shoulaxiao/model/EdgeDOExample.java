package com.shoulaxiao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EdgeDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public EdgeDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStartNodeIsNull() {
            addCriterion("start_node is null");
            return (Criteria) this;
        }

        public Criteria andStartNodeIsNotNull() {
            addCriterion("start_node is not null");
            return (Criteria) this;
        }

        public Criteria andStartNodeEqualTo(String value) {
            addCriterion("start_node =", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeNotEqualTo(String value) {
            addCriterion("start_node <>", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeGreaterThan(String value) {
            addCriterion("start_node >", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeGreaterThanOrEqualTo(String value) {
            addCriterion("start_node >=", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeLessThan(String value) {
            addCriterion("start_node <", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeLessThanOrEqualTo(String value) {
            addCriterion("start_node <=", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeLike(String value) {
            addCriterion("start_node like", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeNotLike(String value) {
            addCriterion("start_node not like", value, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeIn(List<String> values) {
            addCriterion("start_node in", values, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeNotIn(List<String> values) {
            addCriterion("start_node not in", values, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeBetween(String value1, String value2) {
            addCriterion("start_node between", value1, value2, "startNode");
            return (Criteria) this;
        }

        public Criteria andStartNodeNotBetween(String value1, String value2) {
            addCriterion("start_node not between", value1, value2, "startNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeIsNull() {
            addCriterion("end_node is null");
            return (Criteria) this;
        }

        public Criteria andEndNodeIsNotNull() {
            addCriterion("end_node is not null");
            return (Criteria) this;
        }

        public Criteria andEndNodeEqualTo(String value) {
            addCriterion("end_node =", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeNotEqualTo(String value) {
            addCriterion("end_node <>", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeGreaterThan(String value) {
            addCriterion("end_node >", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeGreaterThanOrEqualTo(String value) {
            addCriterion("end_node >=", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeLessThan(String value) {
            addCriterion("end_node <", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeLessThanOrEqualTo(String value) {
            addCriterion("end_node <=", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeLike(String value) {
            addCriterion("end_node like", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeNotLike(String value) {
            addCriterion("end_node not like", value, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeIn(List<String> values) {
            addCriterion("end_node in", values, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeNotIn(List<String> values) {
            addCriterion("end_node not in", values, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeBetween(String value1, String value2) {
            addCriterion("end_node between", value1, value2, "endNode");
            return (Criteria) this;
        }

        public Criteria andEndNodeNotBetween(String value1, String value2) {
            addCriterion("end_node not between", value1, value2, "endNode");
            return (Criteria) this;
        }

        public Criteria andCosValueIsNull() {
            addCriterion("cos_value is null");
            return (Criteria) this;
        }

        public Criteria andCosValueIsNotNull() {
            addCriterion("cos_value is not null");
            return (Criteria) this;
        }

        public Criteria andCosValueEqualTo(Double value) {
            addCriterion("cos_value =", value, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueNotEqualTo(Double value) {
            addCriterion("cos_value <>", value, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueGreaterThan(Double value) {
            addCriterion("cos_value >", value, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueGreaterThanOrEqualTo(Double value) {
            addCriterion("cos_value >=", value, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueLessThan(Double value) {
            addCriterion("cos_value <", value, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueLessThanOrEqualTo(Double value) {
            addCriterion("cos_value <=", value, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueIn(List<Double> values) {
            addCriterion("cos_value in", values, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueNotIn(List<Double> values) {
            addCriterion("cos_value not in", values, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueBetween(Double value1, Double value2) {
            addCriterion("cos_value between", value1, value2, "cosValue");
            return (Criteria) this;
        }

        public Criteria andCosValueNotBetween(Double value1, Double value2) {
            addCriterion("cos_value not between", value1, value2, "cosValue");
            return (Criteria) this;
        }

        public Criteria andClassificationIsNull() {
            addCriterion("classification is null");
            return (Criteria) this;
        }

        public Criteria andClassificationIsNotNull() {
            addCriterion("classification is not null");
            return (Criteria) this;
        }

        public Criteria andClassificationEqualTo(String value) {
            addCriterion("classification =", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationNotEqualTo(String value) {
            addCriterion("classification <>", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationGreaterThan(String value) {
            addCriterion("classification >", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationGreaterThanOrEqualTo(String value) {
            addCriterion("classification >=", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationLessThan(String value) {
            addCriterion("classification <", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationLessThanOrEqualTo(String value) {
            addCriterion("classification <=", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationLike(String value) {
            addCriterion("classification like", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationNotLike(String value) {
            addCriterion("classification not like", value, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationIn(List<String> values) {
            addCriterion("classification in", values, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationNotIn(List<String> values) {
            addCriterion("classification not in", values, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationBetween(String value1, String value2) {
            addCriterion("classification between", value1, value2, "classification");
            return (Criteria) this;
        }

        public Criteria andClassificationNotBetween(String value1, String value2) {
            addCriterion("classification not between", value1, value2, "classification");
            return (Criteria) this;
        }

        public Criteria andBelongGraphIsNull() {
            addCriterion("belong_graph is null");
            return (Criteria) this;
        }

        public Criteria andBelongGraphIsNotNull() {
            addCriterion("belong_graph is not null");
            return (Criteria) this;
        }

        public Criteria andBelongGraphEqualTo(Integer value) {
            addCriterion("belong_graph =", value, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphNotEqualTo(Integer value) {
            addCriterion("belong_graph <>", value, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphGreaterThan(Integer value) {
            addCriterion("belong_graph >", value, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphGreaterThanOrEqualTo(Integer value) {
            addCriterion("belong_graph >=", value, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphLessThan(Integer value) {
            addCriterion("belong_graph <", value, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphLessThanOrEqualTo(Integer value) {
            addCriterion("belong_graph <=", value, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphIn(List<Integer> values) {
            addCriterion("belong_graph in", values, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphNotIn(List<Integer> values) {
            addCriterion("belong_graph not in", values, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphBetween(Integer value1, Integer value2) {
            addCriterion("belong_graph between", value1, value2, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andBelongGraphNotBetween(Integer value1, Integer value2) {
            addCriterion("belong_graph not between", value1, value2, "belongGraph");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_edge
     *
     * @mbggenerated do_not_delete_during_merge Thu May 14 15:18:03 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table data_edge
     *
     * @mbggenerated Thu May 14 15:18:03 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}